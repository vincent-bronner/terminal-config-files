######################
### KEY BINDING    ###
######################

# nvim compatibility - fix the cursor problem
# set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# set prefix to Ctrl-Space
unbind C-b
set -g prefix C-Space
# set -g default-terminal "rxvt-256color";
set -g default-terminal "tmux-256color"

# force a reload of the config file
unbind r
bind r source-file "~/.tmux.conf" \; display "Reloaded tmux conf"

# set window split
unbind v
unbind h
unbind %
unbind '"'
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -c "#{pane_current_path}"

# bind Space send-prefix
# bind Space last-window

# vim pane selection
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# pane movement to window
bind j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind s command-prompt -p "send pane to:"  "join-pane -t '%%'"

unbind a
bind a choose-tree -Zs

# mouse mode
#set -g mouse on

bind m \
    set -g mouse on \; \
    display 'Mouse: ON'

bind M \
    set -g mouse off \; \
    display 'Mouse: OFF'

# Alt vim key to switch windows 
bind -n M-j previous-window
bind -n M-k next-window

# Make a smaller delay so we can perform commands after switching windows
set -sg escape-time 0
set -sg repeat-time 600

# Window title begins by 1 and not 0
set -g base-index 1
setw -g pane-base-index 1

# window management
unbind n
unbind w
bind w new-window -c "#{pane_current_path}"
bind n command-prompt "rename-window '%%'"

# panes
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# Scrollback lines
set -g history-limit 100000

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

#vim key mode
set-window-option -g mode-keys vi
bind -Tcopy-mode-vi 'v' send -X begin-selection
# copy selected selection with y - if using the mouse `y` need to be used before releasing the mouse button
bind -Tcopy-mode-vi 'y' send -X copy-selection

# Copy tmux copy to clipboard (need xsel - possible to use xclip as well)
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection
unbind ]

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"


#### COLOUR (Solarized dark)

# default statusbar colors
# set-option -g status-style fg=yellow,bg=black #yellow and base02

# default window title colors
# set-window-option -g window-status-style fg=brightblue,bg=default #base0 and default
#set-window-option -g window-status-style dim

# active window title colors
# set-window-option -g window-status-current-style fg=brightred,bg=default #orange and default
#set-window-option -g window-status-current-style bright

# pane border
# set-option -g pane-border-style fg=black #base02
#set-option -g pane-active-border-style fg=brightgreen #base01

# message text
# set-option -g message-style fg=brightred,bg=black #orange and base01

# pane number display
# set-option -g display-panes-active-colour blue #blue
#set-option -g display-panes-colour brightred #orange

# clock
# set-window-option -g clock-mode-colour green #green

# bell
# set-window-option -g window-status-bell-style fg=black,bg=red #base02, red

###### List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'arcticicestudio/nord-tmux'
# set -g @plugin "arcticicestudio/nord-tmux"
run '~/.tmux/plugins/tpm/tpm'
